<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\out\official-05-judge.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\out\official-05-judge.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Wed Feb 15 14:00:05 2023
<BR><P>
<H3>Maximum Stack Usage =        200 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; up &rArr; up_init &rArr; select &rArr; PID_realize &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[6]">IRQ0_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">IRQ0_Handler</a><BR>
 <LI><a href="#[9]">IRQ3_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">IRQ3_Handler</a><BR>
 <LI><a href="#[c]">IRQ6_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">IRQ6_Handler</a><BR>
 <LI><a href="#[d]">IRQ7_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">IRQ7_Handler</a><BR>
 <LI><a href="#[e]">IRQ8_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">IRQ8_Handler</a><BR>
 <LI><a href="#[f]">IRQ9_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f]">IRQ9_Handler</a><BR>
 <LI><a href="#[10]">IRQ10_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">IRQ10_Handler</a><BR>
 <LI><a href="#[11]">IRQ11_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[11]">IRQ11_Handler</a><BR>
 <LI><a href="#[12]">IRQ12_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">IRQ12_Handler</a><BR>
 <LI><a href="#[13]">IRQ13_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[13]">IRQ13_Handler</a><BR>
 <LI><a href="#[14]">IRQ14_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[14]">IRQ14_Handler</a><BR>
 <LI><a href="#[15]">IRQ15_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">IRQ15_Handler</a><BR>
 <LI><a href="#[16]">IRQ16_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[16]">IRQ16_Handler</a><BR>
 <LI><a href="#[17]">IRQ17_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">IRQ17_Handler</a><BR>
 <LI><a href="#[18]">IRQ18_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[18]">IRQ18_Handler</a><BR>
 <LI><a href="#[19]">IRQ19_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[19]">IRQ19_Handler</a><BR>
 <LI><a href="#[1a]">IRQ20_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1a]">IRQ20_Handler</a><BR>
 <LI><a href="#[1b]">IRQ21_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1b]">IRQ21_Handler</a><BR>
 <LI><a href="#[1c]">IRQ22_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">IRQ22_Handler</a><BR>
 <LI><a href="#[1d]">IRQ23_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">IRQ23_Handler</a><BR>
 <LI><a href="#[1e]">IRQ24_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">IRQ24_Handler</a><BR>
 <LI><a href="#[1f]">IRQ25_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">IRQ25_Handler</a><BR>
 <LI><a href="#[20]">IRQ26_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">IRQ26_Handler</a><BR>
 <LI><a href="#[21]">IRQ27_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">IRQ27_Handler</a><BR>
 <LI><a href="#[22]">IRQ28_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">IRQ28_Handler</a><BR>
 <LI><a href="#[23]">IRQ29_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[23]">IRQ29_Handler</a><BR>
 <LI><a href="#[24]">IRQ30_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">IRQ30_Handler</a><BR>
 <LI><a href="#[25]">IRQ31_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">IRQ31_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[2]">HardFault_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[6]">IRQ0_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[10]">IRQ10_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[11]">IRQ11_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[12]">IRQ12_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[13]">IRQ13_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[14]">IRQ14_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[15]">IRQ15_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[16]">IRQ16_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[17]">IRQ17_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[18]">IRQ18_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[19]">IRQ19_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[7]">IRQ1_Handler</a> from uart1.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[1a]">IRQ20_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[1b]">IRQ21_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[1c]">IRQ22_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[1d]">IRQ23_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[1e]">IRQ24_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[1f]">IRQ25_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[20]">IRQ26_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[21]">IRQ27_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[22]">IRQ28_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[23]">IRQ29_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[8]">IRQ2_Handler</a> from uart2.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[24]">IRQ30_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[25]">IRQ31_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[9]">IRQ3_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[a]">IRQ4_Handler</a> from timer.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[b]">IRQ5_Handler</a> from delay.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[c]">IRQ6_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[d]">IRQ7_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[e]">IRQ8_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[f]">IRQ9_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_swm181.o(.text) referenced from startup_swm181.o(RESET)
 <LI><a href="#[27]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_swm181.o(.text)
 <LI><a href="#[28]">fputc</a> from uart1.o(.text) referenced from printfa.o(i.__0printf)
 <LI><a href="#[26]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(.text)
</UL>
<P><STRONG><a name="[8c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[29]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[86]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[8d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[8e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[8f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[2b]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))
<BR><BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_fini_ (Weak Reference)
</UL>

<P><STRONG><a name="[90]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[91]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 262 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = main &rArr; up &rArr; up_init &rArr; select &rArr; PID_realize &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_0
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge2
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge1
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_Init
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Start
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Init
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_t_screen
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Connect
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClrBit
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_Init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[b]"></a>IRQ5_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ5_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_INTClr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>delay_ms</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, delay.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Stop
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2f]"></a>IO_Init</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = IO_Init &rArr; GPIO_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClrBit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[44]"></a>extract</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, judge.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;judge2
</UL>

<P><STRONG><a name="[3a]"></a>judge1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, judge.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3b]"></a>judge2</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, judge.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extract
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[32]"></a>PID_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, pid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PID_Init &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>PID_realize</STRONG> (Thumb, 434 bytes, Stack size 32 bytes, pid.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = PID_realize &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbnf
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
</UL>

<P><STRONG><a name="[55]"></a>USART_SendData</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteByte
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IsTXBusy
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_1
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_200
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_100
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_0
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_t_screen
</UL>

<P><STRONG><a name="[58]"></a>select</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = select &rArr; PID_realize &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
</UL>

<P><STRONG><a name="[3e]"></a>send_0</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = send_0 &rArr; USART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[59]"></a>send_100</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = send_100 &rArr; USART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_init
</UL>

<P><STRONG><a name="[5a]"></a>send_200</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, send.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>

<P><STRONG><a name="[39]"></a>MCU_t_screen</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MCU_t_screen &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>uart_1</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, send.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = uart_1 &rArr; USART_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
</UL>

<P><STRONG><a name="[a]"></a>IRQ4_Handler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = IRQ4_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_INTClr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>task</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, timer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = task &rArr; adc_read &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_0
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28]"></a>fputc</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteByte
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IsTXBusy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[5e]"></a>uart1_init</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, uart1.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Connect
</UL>

<P><STRONG><a name="[62]"></a>UART1_GetChars</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART1_GetChars
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ1_Handler
</UL>

<P><STRONG><a name="[7]"></a>IRQ1_Handler</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, uart1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = IRQ1_Handler &rArr; UART1_GetChars
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadByte
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTTimeoutStat
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTRXThresholdStat
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GetChars
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WriteByte
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IsTXBusy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>uart2_init</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, uart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = uart2_init &rArr; UART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Open
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ_Connect
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>UART2_GetChars</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, uart2.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[8]"></a>IRQ2_Handler</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, uart2.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = IRQ2_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IsRXFIFOEmpty
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReadByte
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTTimeoutStat
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTRXThresholdStat
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>up_init</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, up.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = up_init &rArr; select &rArr; PID_realize &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_100
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
</UL>

<P><STRONG><a name="[3c]"></a>up</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, up.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = up &rArr; up_init &rArr; select &rArr; PID_realize &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up_init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_1
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;select
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_0
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>adc_Init</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = adc_Init &rArr; SDADC_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDADC_Open
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDADC_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDADC_Config_Set
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDADC_Config_Sel
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDADC_Config_Cali
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>adc_read</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = adc_read &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDADC_Start
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDADC_Read
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[73]"></a>Get_Adc_Average</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[30]"></a>DRIVER_Init</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = DRIVER_Init &rArr; GPIO_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClrBit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, system_swm181.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[2d]"></a>SystemInit</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, system_swm181.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SystemInit &rArr; SystemCoreClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchToRC48MHz
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchToRC32KHz
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>IRQ0_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ0_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>IRQ3_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ3_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ3_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>IRQ6_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ6_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ6_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>IRQ7_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ7_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ7_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>IRQ8_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ8_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ8_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>IRQ9_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ9_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ9_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>IRQ10_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ10_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ10_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>IRQ11_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ11_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ11_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>IRQ12_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ12_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ12_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>IRQ13_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ13_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ13_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>IRQ14_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ14_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ14_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>IRQ15_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ15_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ15_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>IRQ16_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ16_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ16_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>IRQ17_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ17_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ17_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>IRQ18_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ18_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ18_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>IRQ19_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ19_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ19_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>IRQ20_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ20_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ20_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>IRQ21_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ21_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ21_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>IRQ22_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ22_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ22_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>IRQ23_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ23_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ23_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>IRQ24_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ24_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ24_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>IRQ25_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ25_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ25_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>IRQ26_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ26_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ26_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>IRQ27_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ27_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ27_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>IRQ28_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ28_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ28_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>IRQ29_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ29_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ29_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>IRQ30_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ30_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ30_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>IRQ31_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_swm181.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ31_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ31_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_swm181.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>GPIO_Init</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, swm181_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GPIO_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_Init
</UL>

<P><STRONG><a name="[37]"></a>GPIO_SetBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, swm181_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[40]"></a>GPIO_ClrBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, swm181_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IO_Init
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DRIVER_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>GPIO_InvBit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, swm181_gpio.o(.text), UNUSED)

<P><STRONG><a name="[93]"></a>GPIO_GetBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_gpio.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>GPIO_SetBits</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, swm181_gpio.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>GPIO_ClrBits</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, swm181_gpio.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>GPIO_InvBits</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, swm181_gpio.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>GPIO_GetBits</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, swm181_gpio.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>GPIO_AtomicSetBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, swm181_gpio.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>GPIO_AtomicClrBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, swm181_gpio.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>GPIO_AtomicInvBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, swm181_gpio.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>GPIO_AtomicSetBits</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, swm181_gpio.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>GPIO_AtomicClrBits</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, swm181_gpio.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>GPIO_AtomicInvBits</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, swm181_gpio.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>IRQ_Connect</STRONG> (Thumb, 160 bytes, Stack size 12 bytes, swm181_irqmux.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = IRQ_Connect
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9e]"></a>IRQ_Which</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, swm181_irqmux.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>PORT_Init</STRONG> (Thumb, 434 bytes, Stack size 20 bytes, swm181_port.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;switchToXTAL
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDADC_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_Init
</UL>

<P><STRONG><a name="[6b]"></a>SDADC_Init</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, swm181_sdadc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SDADC_Init &rArr; PORT_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_Init
</UL>

<P><STRONG><a name="[6c]"></a>SDADC_Config_Set</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, swm181_sdadc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SDADC_Config_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_Init
</UL>

<P><STRONG><a name="[70]"></a>SDADC_Start</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, swm181_sdadc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDADC_Config_Cali
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
</UL>

<P><STRONG><a name="[6d]"></a>SDADC_Config_Cali</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, swm181_sdadc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SDADC_Config_Cali
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDADC_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_Init
</UL>

<P><STRONG><a name="[6e]"></a>SDADC_Config_Sel</STRONG> (Thumb, 44 bytes, Stack size 20 bytes, swm181_sdadc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SDADC_Config_Sel
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_Init
</UL>

<P><STRONG><a name="[6f]"></a>SDADC_Open</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, swm181_sdadc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_Init
</UL>

<P><STRONG><a name="[9f]"></a>SDADC_Close</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, swm181_sdadc.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>SDADC_Stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_sdadc.o(.text), UNUSED)

<P><STRONG><a name="[71]"></a>SDADC_Read</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, swm181_sdadc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
</UL>

<P><STRONG><a name="[a1]"></a>SDADC_IsEOC</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm181_sdadc.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>SDADC_ChnOpen</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm181_sdadc.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>SDADC_ChnClose</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm181_sdadc.o(.text), UNUSED)

<P><STRONG><a name="[a4]"></a>SDADC_IntEOCEn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_sdadc.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>SDADC_IntEOCDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_sdadc.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>SDADC_IntEOCClr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, swm181_sdadc.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>SDADC_IntEOCStat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm181_sdadc.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>SDADC_IntOVFEn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_sdadc.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>SDADC_IntOVFDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_sdadc.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>SDADC_IntOVFClr</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, swm181_sdadc.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>SDADC_IntOVFStat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm181_sdadc.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>TIMR_INTClr</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, swm181_timr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ4_Handler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ5_Handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Init
</UL>

<P><STRONG><a name="[42]"></a>TIMR_Stop</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_timr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Init
</UL>

<P><STRONG><a name="[34]"></a>TIMR_Init</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, swm181_timr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIMR_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_Stop
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMR_INTClr
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[36]"></a>TIMR_Start</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_timr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ac]"></a>TIMR_Halt</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, swm181_timr.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>TIMR_Resume</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, swm181_timr.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>TIMR_SetPeriod</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, swm181_timr.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>TIMR_GetPeriod</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, swm181_timr.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>TIMR_GetCurValue</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, swm181_timr.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>TIMR_INTEn</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, swm181_timr.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>TIMR_INTDis</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, swm181_timr.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>TIMR_INTStat</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, swm181_timr.o(.text), UNUSED)

<P><STRONG><a name="[78]"></a>UART_Close</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, swm181_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[60]"></a>UART_Init</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, swm181_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UART_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Close
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
</UL>

<P><STRONG><a name="[61]"></a>UART_Open</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, swm181_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart2_init
</UL>

<P><STRONG><a name="[56]"></a>UART_WriteByte</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, swm181_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ1_Handler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>

<P><STRONG><a name="[66]"></a>UART_ReadByte</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, swm181_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ2_Handler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ1_Handler
</UL>

<P><STRONG><a name="[57]"></a>UART_IsTXBusy</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ1_Handler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
</UL>

<P><STRONG><a name="[68]"></a>UART_IsRXFIFOEmpty</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ2_Handler
</UL>

<P><STRONG><a name="[b4]"></a>UART_IsTXFIFOFull</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>UART_SetBaudrate</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, swm181_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[7a]"></a>UART_GetBaudrate</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, swm181_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[b5]"></a>UART_CTSConfig</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>UART_CTSLineState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>UART_RTSConfig</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>UART_RTSLineState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>UART_LINConfig</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>UART_LINGenerate</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>UART_LINIsDetected</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>UART_LINIsGenerated</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>UART_ABRStart</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>UART_ABRIsDone</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>UART_INTRXThresholdEn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>UART_INTRXThresholdDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>UART_INTRXThresholdStat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm181_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ2_Handler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ1_Handler
</UL>

<P><STRONG><a name="[c1]"></a>UART_INTTXThresholdEn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[c2]"></a>UART_INTTXThresholdDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>UART_INTTXThresholdStat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>UART_INTTimeoutEn</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>UART_INTTimeoutDis</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[65]"></a>UART_INTTimeoutStat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm181_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ2_Handler
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ1_Handler
</UL>

<P><STRONG><a name="[c6]"></a>UART_INTTXDoneEn</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>UART_INTTXDoneDis</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[c8]"></a>UART_INTTXDoneStat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, swm181_uart.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Adc_Average
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetBaudrate
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetBaudrate
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ca]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[63]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_GetChars
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_GetChars
</UL>

<P><STRONG><a name="[cb]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[cc]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[52]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
</UL>

<P><STRONG><a name="[53]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
</UL>

<P><STRONG><a name="[50]"></a>__ARM_scalbnf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, fscalb.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
</UL>

<P><STRONG><a name="[cd]"></a>scalbnf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fscalb.o(.text), UNUSED)

<P><STRONG><a name="[4a]"></a>__aeabi_dadd</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[48]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
</UL>

<P><STRONG><a name="[81]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[49]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_t_screen
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[72]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[4b]"></a>__ARM_scalbn</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
</UL>

<P><STRONG><a name="[ce]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
</UL>

<P><STRONG><a name="[47]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[54]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
</UL>

<P><STRONG><a name="[4d]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_d2iz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MCU_t_screen
</UL>

<P><STRONG><a name="[5d]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task
</UL>

<P><STRONG><a name="[cf]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[45]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_realize
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;up
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PID_Init
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[7d]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[d0]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[82]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[d1]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[7e]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[d2]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[d3]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[7b]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[80]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[7f]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[85]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[2a]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[d4]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[87]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d5]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[69]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IRQ2_Handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_read
</UL>

<P><STRONG><a name="[d6]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[d7]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[84]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[d8]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[d9]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[da]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[75]"></a>switchToXTAL</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, system_swm181.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_Init
</UL>

<P><STRONG><a name="[76]"></a>switchToRC32KHz</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, system_swm181.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[77]"></a>switchToRC48MHz</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, system_swm181.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[89]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[88]"></a>_printf_core</STRONG> (Thumb, 1760 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[8b]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[8a]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[2c]"></a>__arm_fini_</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_fini
</UL>
<HR></body></html>
